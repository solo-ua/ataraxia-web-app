redux is best used with immutables!!! like make a new state with the old one included instead of changing everything
reducers take the old state and change how the state should change in responce to an action
_____________________________________________
component lifecycle: 
start = component is mounted
update = component is updated
unmount = component is removed

this is why we useEffect : it runs the inner function
everytime the component mounts 1+.

everytime we setstate
for this reason we use depenancies to stop the code from
running in infiite loop.
you can specify the dependancy, so it will update only
when this specific state changes.

and finally to run useeffect when component unmounts:
return () => console.log('bye bye); inside of the useEeffect
_____________________________________________

use ref = does not rerender
_____________________________________________
Multer is an npm package commonly used in Node.js applications for handling multipart/form data, particularly for file uploads. It simplifies the process of handling file uploads by providing middleware that can be easily integrated into Express.js applications.
_____________________________________________

Notes for 3D room generation with poses:
Poses MUST follow a strict naming guideline. Every posed armeture must be named pose-node-x
Where x is the index of the pose starting from 0 increasing to the number of poses existing by 1.

For avatar rigs:
Avatar root rig MUST be named 'root', same applies for any other present rigs in the scene.